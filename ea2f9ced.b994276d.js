(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{329:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(1),o=n(9),a=(n(0),n(349)),c={title:"Cargo configuration"},i={id:"setup/cargo-config",title:"Cargo configuration",description:"Overlord provides two kinds of block produce logic, random and polling. Random uses a deterministic random algorithm to select a leader based on the node's `propose_weight`, and votes are counted according to `vote_weight`. Polling takes turns selecting the leader, so `propose_weight` does not take effect in this case. Polling also counts according to `vote_weight`.",source:"@site/docs/setup/cargo-config.md",permalink:"/docs/next/setup/cargo-config",editUrl:"https://github.com/nervosnetwork/muta-docs/edit/master/docs/setup/cargo-config.md",version:"next",sidebar:"docs_zh",previous:{title:"\u8282\u70b9\u8fd0\u884c\u914d\u7f6e",permalink:"/docs/next/docs_zh/setup/node-config"},next:{title:"\u591a\u8282\u70b9\u90e8\u7f72\u6307\u5357",permalink:"/docs/next/docs_zh/setup/deploy"}},s=[],l={rightToc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Overlord provides two kinds of block produce logic, random and polling. Random uses a deterministic random algorithm to select a leader based on the node's ",Object(a.b)("inlineCode",{parentName:"p"},"propose_weight"),", and votes are counted according to ",Object(a.b)("inlineCode",{parentName:"p"},"vote_weight"),". Polling takes turns selecting the leader, so ",Object(a.b)("inlineCode",{parentName:"p"},"propose_weight")," does not take effect in this case. Polling also counts according to ",Object(a.b)("inlineCode",{parentName:"p"},"vote_weight"),".\nMuta has a switch for the Random block produce feature, which can be turned on by ",Object(a.b)("inlineCode",{parentName:"p"},'features = ["random_leader"]'),". In muta-based blockchain, random block produce is used by default. When developing with the Muta framework, the muta dependency in ",Object(a.b)("inlineCode",{parentName:"p"},"Cargo.toml")," allows you to select the following block produce methods."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust"}),'# polling\nmuta = { git = "https://github.com/nervosnetwork/muta", branch = "master" }\n# random\nmuta = { git = "https://github.com/nervosnetwork/muta", branch = "master", features = ["random_leader"] }\n')))}p.isMDXComponent=!0},349:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?o.a.createElement(f,i({ref:t},l,{components:n})):o.a.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);